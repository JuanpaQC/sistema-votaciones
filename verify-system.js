#!/usr/bin/env node

// verify-system.js - Verificaci√≥n r√°pida del sistema electoral
const fetch = (...args) => import('node-fetch').then(({default: fetch}) => fetch(...args));

const API_BASE = 'http://localhost:4000';

async function quickTest() {
    console.log('üîç Verificando sistema electoral...\n');
    
    try {
        // 1. Health check
        console.log('1. Verificando servidor backend...');
        const health = await fetch(`${API_BASE}/api/health`);
        const healthData = await health.json();
        console.log(health.ok ? '‚úÖ Backend funcionando' : '‚ùå Backend no responde');
        
        // 2. Candidatos
        console.log('2. Verificando candidatos...');
        const candidates = await fetch(`${API_BASE}/api/candidates`);
        const candidatesData = await candidates.json();
        console.log(candidates.ok ? `‚úÖ ${candidatesData.candidates?.length || 0} candidatos encontrados` : '‚ùå Error obteniendo candidatos');
        
        // 3. Elecciones  
        console.log('3. Verificando elecciones...');
        const elections = await fetch(`${API_BASE}/api/elections`);
        const electionsData = await elections.json();
        console.log(elections.ok ? `‚úÖ ${electionsData.elections?.length || 0} elecciones encontradas` : '‚ùå Error obteniendo elecciones');
        
        // 4. Usuarios
        console.log('4. Verificando usuarios...');
        const users = await fetch(`${API_BASE}/api/admin/users`);
        const usersData = await users.json();
        console.log(users.ok ? `‚úÖ ${usersData.users?.length || 0} usuarios encontrados` : '‚ùå Error obteniendo usuarios');
        
        // 5. Estad√≠sticas de auditor√≠a
        console.log('5. Verificando auditor√≠a...');
        const audit = await fetch(`${API_BASE}/api/admin/audit-logs/stats`);
        const auditData = await audit.json();
        console.log(audit.ok ? `‚úÖ ${auditData.stats?.total || 0} eventos de auditor√≠a` : '‚ùå Error obteniendo auditor√≠a');
        
        console.log('\nüéâ Verificaci√≥n b√°sica completada!');
        
    } catch (error) {
        console.log('‚ùå Error:', error.message);
        console.log('üí° Aseg√∫rate de que el servidor backend est√© ejecut√°ndose en puerto 4000');
    }
}

quickTest();